name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-gdb
          mingw-w64-x86_64-libelf
          mingw-w64-x86_64-libepoxy
          mingw-w64-x86_64-libzip
          mingw-w64-x86_64-lua
          mingw-w64-x86_64-pkgconf
          mingw-w64-x86_64-qt5
          mingw-w64-x86_64-qt5-tools
          mingw-w64-x86_64-SDL2
          mingw-w64-x86_64-ntldd-git
          mingw-w64-x86_64-ffmpeg
          mingw-w64-x86_64-ninja

    - name: Configure
      shell: msys2 {0}
      run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$PWD/build/install"

    - name: Build
      shell: msys2 {0}
      run: cmake --build build --config Release

    - name: Collect runtime DLLs
      shell: msys2 {0}
      run: |
        cmake --install build --config Release
        appdir="$PWD/build/install/bin"
        mkdir -p "$appdir"
        for exe in "$appdir"/*.exe; do
          [ -f "$exe" ] || continue
          /mingw64/qt5/bin/windeployqt.exe --no-translations --dir "$appdir" "$exe" 2>/dev/null || true
        done
        for bin in "$appdir"/*.exe "$appdir"/*.dll; do
          [ -f "$bin" ] || continue
          ntldd -R "$bin" | awk '/=>/ && $3 ~ /^\/mingw64\/bin\// {print $3}' | sort -u | xargs -r -I{} cp -u {} "$appdir/"
        done

    - name: Package
      shell: msys2 {0}
      run: cmake -E tar cf build/mgba-windows.zip --format=zip -C build/install .

    - name: Upload distribution package
      uses: actions/upload-artifact@v4
      with:
        name: mgba-windows-distribution
        path: build/mgba-windows.zip
        retention-days: 14
